services:
  # Keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:26.2.5
    ports:
      - "8080:8080"
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
      - KC_DB=h2-file
      - KC_DB_URL_PATH=/opt/keycloak/data/h2/keycloakdb
      - KC_HEALTH_ENABLED=true
    volumes:
      - keycloak-data:/opt/keycloak/data
      - ./realm-export.json:/opt/keycloak/data/import/realm-export.json:ro
    command: ["start-dev", "--import-realm"]
    networks:
      - greeting-view-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - NODE_ENV=development
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_REALM=greeting-view
      - KEYCLOAK_CLIENT_ID=greeting-view-backend
      - KEYCLOAK_SECRET=your-client-secret
      - SESSION_SECRET=your-session-secret
      - FRONTEND_URL=http://localhost:9002
    depends_on:
      keycloak:
        condition: service_healthy
    networks:
      - greeting-view-network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - API_URL=http://localhost:3001
    ports:
      - "9002:9002"
    environment:
      - NODE_ENV=production
      - PORT=9002
      - NEXT_PUBLIC_KEYCLOAK_URL=http://localhost:8080
      - NEXT_PUBLIC_KEYCLOAK_REALM=greeting-view
      - NEXT_PUBLIC_KEYCLOAK_CLIENT_ID=greeting-view-frontend
      - NEXT_PUBLIC_API_URL=http://localhost:3001
    depends_on:
      keycloak:
        condition: service_healthy
      backend:
        condition: service_started
    networks:
      - greeting-view-network
    restart: unless-stopped

networks:
  greeting-view-network:
    driver: bridge

volumes:
  keycloak-data:
    driver: local 